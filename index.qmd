---
format:
  revealjs:
    theme: simple
    transition: slide
    background-transition: fade
    scrollable: true
    css: assets/custom.css
slide-number: true
self-contained: true
---

## RECHERCHE REPRODUCTIBLE {background-color="#292929"}

en écologie numérique

<br/> <br/> CESAB, le 02-12-2024

<br/> <br/> 

![](assets/banner-rdatatoolbox_150dpi.png)

## Qui je suis ? {data-background-image="assets/surprise_paysage.jpg" data-background-opacity=0.4}

::: incremental
-   chercheur (IRD)

-   écologue (marin)

-   récifs coralliens

-   écologie fonctionnelle

-   écologie numérique
:::

<br/> <br/> 

francois.guilhaumon\@ird.fr / fguilhaumon.github.io

# Recherche reproductible ? {background-color="#292929"}

# Un exemple {background-color="#292929"}

##  {background-color="black"}

![](assets/Galileo_Galilei_by_Peter_Paul_Rubens.jpg){fig-align="center"}

##  {background-color="black" transition="fade-out"}

![](assets/Portrait_of_Jupiter_from_Cassini.jpg){fig-align="center"}

##  {background-color="#f2f2f2"}

![](assets/galileo_scope.webp){fig-align="center"}

##  {background-color="black"}

<br/> <br/> <br/> <br/> ![](assets/Galilean_satellites.jpg)

##  {background-color="black"}

![](assets/goodman_2014_fig1.png){fig-align="center"}

<br/> <br/>

[[Goodman et al. (2014) PLoS Comput Biol 10(4): e1003542. doi:10.1371/journal.pcbi.1003542](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003542)]{.small}

## 

<br/> <br/> <br/> <br/> <br/> Galillée relate une expérience scientifique au bout de laquelle on abouti tous à la conclusion que Io, Europe, Ganymède et Callisto sont en orbite autour de Jupiter.

##  {background-color="black"}

::: columns
::: {.column width="60%"}
<br/> <br/> <br/> ![](assets/goodman_2014_fig1.png)
:::

::: {.column width="40%"}
Les notes de Galillée intègrent:

-   Données (dessins)

-   Méta-données, matériel (date, météo, carac. lunette)

-   Con[Texte]{.blue} (description des méthodes, analyses et conclusions)
:::
:::

## Recherche reproductible {auto-animate="true" auto-animate-easing="ease-in-out"}

<br/> <br/>

::: r-hstack
::: {.fragment data-id="box1" auto-animate-delay="0" style="background: #1db1c2; width: 300px; height: 200px; margin: 10px; display: flex; justify-content: center; align-items: center;"}
données
:::

::: {.fragment data-id="box2" auto-animate-delay="0.1" style="background: #e8c32e; width: 300px; height: 200px; margin: 10px; display: flex; justify-content: center; align-items: center;"}
code
:::

::: {.fragment data-id="box3" auto-animate-delay="0.2" style="background: #a8b035; width: 300px; height: 200px; margin: 10px; display: flex; justify-content: center; align-items: center;"}
documentation
:::
:::

## Recherche reproductible {auto-animate="true" auto-animate-easing="ease-in-out"}

<br/> <br/>

::: r-stack
::: {data-id="box1" style="background: #1db1c2; width: 700px; height: 400px; border-radius: 50px;"}
:::

::: {data-id="box2" style="background: #e8c32e; width: 600px; height: 300px; border-radius: 50px;"}
:::

::: {data-id="box3" style="background: #a8b035; width: 500px; height: 200px; border-radius: 50px; display: flex; justify-content: center; align-items: center;"}
Recherche Reproductible
:::
:::

## Un nouveau paradigme

<br/>

::: incremental
-   les financeurs (ANR, Europe) et les revues le demandent (accéssibilité des données et du code, science ouverte)

-   ~~si je garde mes données et mon code, j'ai un avantage compétitif~~

-   si je partage mes données et mon code, mon travail aura plus de visibilité (et de citations)
:::

## Avantages

::: incremental
-   Oblige à vérifier le travail (partage données + code)
-   Votre [vous]{.blue} futur vous remerciera (vous serez bcp plus productif)
-   Vos collaborateurs aussi
-   En étant reproductible vous renforcez votre crédibilité et votre réputation
-   La reproductibilité favorise la confiance dans la démarche scientifique
-   Un [progrès scientifique plus rapide]{.blue}
:::

# il faut accepter de coder un minimum ...

<!--## il faut accepter de coder un minimum ... {data-background-image="assets/surprise_fg.jpg"}-->

## il faut accepter de coder un minimum ...
![](assets/r_afraid.png){fig-align="center"}

# Comment ?

##

![](assets/goodman_2014_fig1.png){height="400" fig-align="center"}

[depuis Galillée le concept a un peu évolué ...]{.center}

## L'article

::: r-stack
![](assets/nature_cover.webp){.fragment width="450"}

![](assets/ele_cover.jpg){.fragment width="400"} ![](assets/science.webp){.fragment width="400"}

![](assets/pnas.webp){.fragment width="350"}
:::

##  {data-background-image="assets/iceberg.png"}

<br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/> <br/>

[Un article publié n'est que le sommet de l'iceberg que représente le processus de recherche ...]{.white}

## 

<br/> <br/> <br/>

> "An article about computational results is advertising, not scholarship. The actual scholarship\* is the full software environment, code and data, that produced the result."

[Claerbout and Karrenbach 1992.]{.small}

<br/> <br/>

\*érudition

## Les concepts

[Wilson et al. 2016. Plos Comp Biol. <https://arxiv.org/pdf/1609.00037.pdf>]{.small}

::: incremental
-   [Project Organization : Organisation des fichiers]{.green}

-   [Data management : Gestion des données]{.green}

-   [Software : Structure du code & Cohérence du flux d'analyses]{.green}

-   [Tracking Changes : Gestion des versions de fichiers]{.green}

-   [Collaboration]{.green}

-   [Manuscripts]{.green}
:::

## [Project Organization]{.green}

<br/>

"Organizing the digital artifacts of a project to ease discovery and understanding."

<br/> <br/> <br/>

::: fragment
Organiser tous les fichiers relatifs à un projet selon une structure cohérente (et standardisée ...).
:::

##  {background-color="#636363" background-image="assets/folder_mess_cooking.png"}

## [Project Organization]{.green}

<br/> <br/>

Research compendium

##  {background-color="#636363" background-image="assets/folder_tidy_cooking.png"}

## [Data management]{.green}

<br/>

"Saving both raw and intermediate forms; documenting all steps; creating tidy data amenable to analysis."

## [Data management]{.green}

> -   Sauvegarder les données initiales en l'état.

> -   Coder l'acquisition des données au maximum (API, fonction 'download.file' de R).

> -   Toute transformation des données sera codée, cela devient un résultat.

> -   Générer des données "bien rangées", telles que vous voudriez les recevoir ([tidy]{.green})

## Tidy data

![](assets/tidy_data.jpg){fig-align="center"}

## [Software]{.green}

<br/>

Writing, organizing, and sharing scripts and programs used in an analysis.

## [Software]{.green}

Le code, les scripts

> -   Respecter au maximum les conventions de code de votre communauté, <https://style.tidyverse.org/>

> -   Peut importe la convention adoptée, rester constant !

> -   Chemins relatifs ! Toujours !

> -   Pas d'espaces, d'accents ni de MAJUSCULES !

> -   Commenter/documenter ([les fonctions]{.green}, les scripts)

## [Software]{.green}

![](assets/coding_cases.png){fig-align="center"}

## [Software]{.green}

L'environnement logiciel

> -   Les packages (versions !), la version de R (e.g. stringAsFactors = FALSE depuis 4.0, '\|\>' depuis 4.1): utiliser le package [renv]{.blue}

> -   et les bibliothèques système, la version de l'OS ?

> -   Docker (Rocker pour R), permet de créer une image de l'environnement de travail (OS, bibliothèques système, R, packages) (c'est faisable !)

## [Software]{.green}

Le "workflow" (enchaînement des scripts, des logiciels).

![](assets/tweet.png){fig-align="center"}

## [Software]{.green}

Le "workflow" (enchaînement des scripts, des logiciels).

<br/>

![](https://imgs.xkcd.com/comics/automation.png){width="50%" fig-align="center"}

> -   il existe des outils pour ça (script R, package [targets]{.blue})

## [Tracking Changes]{.green}

<br/>

Archiver l'évolution de divers composants de notre projet.

::: columns
::: column
::: fragment
![](assets/folder_1.png)
:::
:::

::: column
::: fragment
![](assets/folder_2.png)
:::
:::
:::

## [Tracking Changes]{.green}

Utiliser un logiciel de gestion de versions ([**Git**]{.blue}).

![](assets/git.png){fig-align="center"}

##  {data-background-image="assets/capure_rstudio-git.png"}

## [Collaboration]{.green}

<br/>

Faciliter la compréhension des projets de recherche : permettre la [contribution]{.blue}, la [vérification]{.blue}, la [synthèse]{.blue} et la [progression]{.blue}.

## [Collaboration]{.green}

<br/>

> -   conventions de code

> -   documentation de l'archive de recherche (README, license, code de contribution)

> -   plateforme de collaboration en ligne (intègre Git !) : github, gitlab

## [Manuscripts]{.green}

<br/>

Writing manuscripts in a way that leaves an audit trail and minimizes manual merging of conflict.

## [Manuscripts]{.green}

<br/>

Utiliser la programmation lettrée (literate programming)

<br/>

<blockquote>Au lieu de considérer que notre tâche principale est de dire à un ordinateur ce qu'il doit faire, appliquons-nous plutôt à expliquer à des êtres humains ce que nous voulons que l'ordinateur fasse.</blockquote>

[Donald Knuth, années 70]{.reference}

## [Manuscripts]{.green}

<br/>

Utiliser la programmation lettrée (literate programming)

<br/>

<blockquote>Au lieu de passer des nuits entières à reformater des titres, insérer et renuméroter des figures et des tableaux, on ferait mieux de se concentrer sur la pertinence de son intro ou de sa discussion.</blockquote>


## [Manuscripts]{.green}

[Quarto]{.blue} (<https://quarto.org>)

![](assets/rstudio-hello.png){fig-align="center"}

## [Manuscripts]{.green}

En markdown le texte est formaté en utilisant des balises très simples comme les \_ ou les \*

![](assets/rstudio-source-visual.png){fig-align="center"}

## [Manuscripts]{.green}

<br/>

Comment ça marche Quarto ?

![](assets/qmd_md_output.png){fig-align="center"}

## [Manuscripts]{.green}

Formats d'export de Quarto (pandoc)

![](assets/rmarkdown_formats.png){width="50%" fig-align="center"}

## Program

:::{.small}

+---------------+-------------------------------------------------+
| **Monday**    | - Project organization & Good practices         |
|               | - Version control w/ Git (Part I)               |
+---------------+-------------------------------------------------+
| **Tuesday**   | - Version control w/ Git (Part II)              |
|               | - Collaboration & sharing w/ GitHub             |
+---------------+-------------------------------------------------+
| **Wednesday** | - Literate programming w/ Quarto                |
|               | - Pipeline optimization w/ targets              |
|               | - Developing an R package                       |
+---------------+-------------------------------------------------+
| **Thursday**  | - Freezing package versions w/ renv             |
|               | - Containerization w/ Docker                    |
|               | - Subgroups projects                            |
+---------------+-------------------------------------------------+
| **Friday**    | - Subgroups projects                            |
+---------------+-------------------------------------------------+

:::